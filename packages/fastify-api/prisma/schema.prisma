// learn more in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PGSQL_DB_URL")
}

model User {
  id      Int    @id @default(autoincrement())
  email   String @unique
  name    String @unique
  UserDir Int    @unique

  URD UserRootDirectory @relation(fields: [UserDir], references: [id])
}

model UserRootDirectory {
  id   Int   @id @default(autoincrement())
  user User?

  Dirs          Directory[]
  quickAddLinks Link[]
  // rssfeeds       Rssfeed[]
}

model Directory {
  id                  Int    @id @default(autoincrement())
  name                String @unique
  userRootDirectoryId Int
  Content_Links       Link[]

  UserRootDirectory UserRootDirectory @relation(fields: [userRootDirectoryId], references: [id])
  // parentDir           Int
  // Content_Directories Directory[] @relation("SubDirectories")
  // UserRootDirectory UserRootDirectory? @relation(fields: [userRootDirectoryId], references: [id])
}

model Link {
  id        Int        @id @default(autoincrement())
  url       String
  name      String
  createdAt DateTime   @default(now())
  source    Source     @default(Unknown)
  Tags      Link_Tag[]

  quickAddDirId Int?
  directoryId   Int?
  quickAddDir   UserRootDirectory? @relation(fields: [quickAddDirId], references: [id])
  Directory     Directory?         @relation(fields: [directoryId], references: [id])
}

enum Source {
  Browser
  External
  Unknown
}

model Link_Tag {
  linkId Int
  tagId  Int
  link   Link @relation(fields: [linkId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([linkId, tagId])
}

model Tag {
  id               Int        @id @default(autoincrement())
  name             String
  createdAt        DateTime   @default(now())
  LinksWithThisTag Link_Tag[]
}
