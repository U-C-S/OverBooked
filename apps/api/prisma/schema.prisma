// learn more in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PGSQL_DB_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  profile  Profile @relation(fields: [id], references: [id])
}

model Profile {
  id        Int         @id @unique
  user      User?
  name      String
  bio       String?
  avatar    String?
  createdAt DateTime    @default(now())

  shelves   Directory[]
  quickAdd  Link[]
}

model Directory {
  id             Int     @id @default(autoincrement())
  name           String  @unique
  ownerProfileId Int
  ownerProfile   Profile @relation(fields: [ownerProfileId], references: [id])
  Content_Links  Link[]
  // parentDir           Int
  // Content_Directories Directory[] @relation("SubDirectories")
  // Profile UserRootDirectory? @relation(fields: [userRootDirectoryId], references: [id])
}

model Link {
  id            Int        @id @default(autoincrement())
  url           String
  name          String
  createdAt     DateTime   @default(now())
  source        Source     @default(Unknown)
  Tags          Link_Tag[]
  quickAddDirId Int?
  directoryId   Int?
  quickAddDir   Profile?   @relation(fields: [quickAddDirId], references: [id])
  Directory     Directory? @relation(fields: [directoryId], references: [id])
}

enum Source {
  Browser
  External
  Unknown
}

model Link_Tag {
  linkId Int
  tagId  Int
  link   Link @relation(fields: [linkId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([linkId, tagId])
}

model Tag {
  id               Int        @id @default(autoincrement())
  name             String
  createdAt        DateTime   @default(now())
  LinksWithThisTag Link_Tag[]
}
